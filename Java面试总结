1.什么是Java虚拟机？为什么Java被称作是“平台无关的编程语言”？
Java虚拟机（Java Virtual Machine）是一个可以执行Java字节码的虚拟机进程，Java源文件被编译成能被Java虚拟机执行的字节码文件（也就是.class），Java虚拟机屏蔽了具体操作系统的相关信息，使得只需要字节码就可以运行Java程序。

2.JDK和JRE的区别是什么？
JDK（Java Development Kit）是完整的Java语言开发工具包，主要包括JRE、编译器以及JavaDoc等工具，它使得开发者能够开发、编译、执行Java程序；而JRE（Java Runtime Environment）是Java程序运行所需要的环境集合，包括了Java虚拟机以及Java核心的类库。总的来说，前者包含了后者。

3.”static”关键字是什么意思？Java中是否可以覆盖(override)一个static的方法？
static关键字表明一个成员变量或者成员方法可以在没有类实例的情况下被访问；Java中不能覆盖一个static方法，因为方法覆盖是基于运行时动态绑定的，而static方法是编译时静态绑定的，static方法和类的任何实例都是不相关的，所以不适用。

4.是否可以在static环境中访问非static变量？
static变量在Java中属于该类，它在所有类实例中的值都是一样的，当类被Java虚拟机载入时，static变量就被初始化了，如果此时尝试访问非static变量，编译器会报错，因为此时非static变量并没有被创建出来（没有实例）。

5.Java支持的基本数据类型有哪些？什么是自动拆装箱？
Java支持八种基本数据类型：byte、short、int、long、float、double、boolean、char；
自动装箱是指Java编译器从基本数据类型到相应的对象包装类型之间做的一个转化，比如，int转成Integer，double转成Double等等，反之，就是自动拆箱。

6.Java中的方法覆盖(Overriding)和方法重载(Overloading)是什么意思？
方法覆盖是指子类重新定义了父类中的方法，其必须有相同的方法名，参数列表和返回类型；方法重载则发生在同一个类里面的多个方法中，此时方法名相同但参数不同。

7.Java中，什么是构造函数？什么是构造函数重载？什么是复制构造函数？
当一个新的对象被创建时，会调用类中定义的构造函数。每一个类都至少有一个构造函数，没有定义的情况下编译器也会提供一个默认的构造函数；
类中可以定义多个构造函数，由于函数名必然相同，则各函数的参数列表必须唯一，调用时，通过不同的参数列表来确认调用的函数；
复制构造函数是一种特殊的构造函数，主要用于基于同一类的对象来完成其他对象的构建和初始化，Java不会创建默认的复制构造函数；

8.Java支持多继承么？
Java不支持多继承，每个类只能继承一个类，但可以实现多个接口。

9.接口（Interface）和抽象类（Abstract Class）的区别是什么？
*接口中所有的方法都是抽象的，而抽象类则可以同时包含抽象和非抽象的方法；
*类可以实现很多接口，但是只能继承一个抽象类；
*类如果要实现一个接口，必须要实现接口中的所有方法，但是继承抽象类可以不需要实现类中声明的所有方法（此时子类也须是抽象的）；
*接口中声明的变量默认都是final的，抽象类可以包含非final的变量；
*接口中的成员函数默认是public的，抽象类成员函数可以是private、protected或者public；
*接口是绝对抽象的，不可以被实例化，抽象类也不能被实例化，但是其中包含的main方法可以被调用；

10.什么是值传递和引用传递？
值传递，意味着传递了对象的一个副本，即使改变副本的值，也不会影响到原来的对象的值；
引用传递，则意味传递的不是实际的对象，而是对象的一个引用，对引用对象做的改变会反映到实际对象中。

11.进程和线程的区别是什么？
进程是正在执行的应用程序，而线程是进程内部的一个执行序列；一个进程可以有多个线程；进程拥有自己独立的内存区域；

12.创建线程有几种不同的方式？你喜欢哪一种？为什么？
有三种方式能创建线程：
*继承Thread类
*实现Runnable接口
*使用Executor框架来创建线程池
更喜欢实现Runnable接口这种方式，因为Java不支持多继承，若已经设计继承其他类的情况下，就不能再继承Thread类，只能实现接口

13.概括的解释下线程的几种可用状态。
*创建（New）
*可运行态（Runnable）
*运行中（Running）
*阻塞/非运行态（Blocked）
*死亡（Dead）

14.同步（synchronized）方法和同步代码块的区别是什么？
Java中，每一个对象有一把锁，线程可以使用synchronized关键字来获取对象上的锁，锁定后同一时间只能有一个线程执行被锁定的代码；synchronized关键字可以用在方法级别（粗粒度锁）或者代码块级别（细粒度锁）。

15.在监视器(Monitor)内部，是如何做线程同步的？程序应该做哪种级别的同步？
监视器和锁在Java虚拟机中是一块使用的，监视器监视一块同步代码块，确保一次只有一个线程在执行同步代码块。每一个监视器都和一个对象引用相关联。线程在获取锁之前不允许执行同步代码。

16.什么是死锁(deadlock)？
两个或多个进程都在互相等待对方执行完毕才能继续往下执行的时候就发生了死锁，结果就是多个进程都陷入了无限的等待中。

17.如何确保N个线程可以访问N个资源同时又不导致死锁？
制定获取锁的顺序，并强制线程按照指定的顺序获取锁。

18.Java集合类框架的基本接口有哪些？
*Collection：代表一组对象，每一个对象都是它的子元素；
*Set：不包含重复元素的Collection；
*List：有顺序的Collection，可以包含重复元素；
*Map：键值对，键不能重复；

19.为什么集合类没有实现Cloneable和Serializable接口？
为了让每一种具体的实现类能够选择自己的方式对元素进行保存和排序，如有的允许重复有的则不行。而克隆(cloning)或者是序列化(serialization)的语义和含义都是跟具体的实现相关的。因此，应该由集合类的具体实现来决定如何被克隆或者是序列化。

20.什么是迭代器(Iterator)？
Iterator接口提供了很多对集合元素进行迭代的方法，且不必暴露集合对象的内部细节，每一个集合类都包含了可以返回迭代器实例的迭代方法，迭代器可以按照一定顺序访问容器中的各个元素。

21.Iterator和ListIterator的区别是什么？
*Iterator可以遍历Set和List集合，但是ListIterator只能用于遍历List；
*Iterator对集合只能是前向遍历，ListIterator可以前向也可以后向；
*ListIterator实现了Iterator接口，并扩展了其他功能，如：增加元素，替换元素，获取前一个元素和后一个元素的索引等等。

22.快速失败(fail-fast)和安全失败(fail-safe)的区别是什么？
Iterator的安全失败是基于对底层集合做拷贝，因此，它不受源集合上修改的影响。java.util包下面的所有的集合类都是快速失败的，而java.util.concurrent包下面的所有的类都是安全失败的。快速失败的迭代器会抛出ConcurrentModificationException异常，而安全失败的迭代器永远不会抛出这样的异常。

23.Java中的HashMap的工作原理是什么？
HashMap是以键值对（key-value）的形式存储元素的。HashMap需要一个hash函数，它使用hashCode（）和equals（）方法来添加和检索元素。当调用push（）方法时，会计算key的hash值，如果key存在，则更新value的值，否则把键值对存储在集合中合适的索引上。

24.HashMap中hashCode()和equals()方法的重要性体现在什么地方？
HashMap使用hashCode()和equals()方法来确定键值对的索引，当根据键获取值的时候也会用到这两个方法。如果没有正确的实现这两个方法，两个不同的键可能会有相同的hash值，因此，可能会被集合认为是相等的。而且，这两个方法也用来发现重复元素，所以这两个方法的实现对HashMap的精确性和正确性是至关重要的。

25.HashMap和Hashtable有什么区别？
HashMap和Hashtable都实现了Map接口，有许多相似的特性，但是也有如下不同点：
*HashMap允许键和值是null，而Hashtable不允许；
*HashMap不是同步的，而Hashtable是同步的，所以前者适合单线程后者适合多线程环境；
*HashMap提供了可供应用迭代的键的集合，因此，HashMap是快速失败的。另一方面，Hashtable提供了对键的列举(Enumeration)；
*Hashtable是遗留类，不推荐使用。

26.数组(Array)和列表(ArrayList)有什么区别？什么时候应该使用Array而不是ArrayList？
*Array可以包含基本类型和对象类型，ArrayList只能包含对象类型；
*Array大小是固定的，ArrayList的大小是动态变化的；
*ArrayList提供了更多的方法，如：addAll（）、removeAll（）等等；
对于基本类型数据，集合使用自动装箱来减少编码工作量，但是，当处理固定大小的基本数据类型时，效率较低；

27.ArrayList和LinkedList有什么区别？
ArrayList和LinkedList都实现了List接口，他们有以下的不同点：
*ArrayList是基于索引的数据接口，它的底层是数组。它可以以O(1)时间复杂度对元素进行随机访问。与此对应，LinkedList是以元素列表的形式存储它的数据，每一个元素都和它的前一个和后一个元素链接在一起，在这种情况下，查找某个元素的时间复杂度是O(n)；
*相对于ArrayList，LinkedList的插入，添加，删除操作速度更快，因为当元素被添加到集合任意位置的时候，不需要像数组那样重新计算大小或者是更新索引；
*LinkedList比ArrayList更占内存，因为LinkedList为每一个节点存储了两个引用，一个指向前一个元素，一个指向下一个元素。

28.Comparable和Comparator接口是干什么的？列出它们的区别。
